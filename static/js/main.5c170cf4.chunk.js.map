{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","props","total","perPage","currentPage","onPageChange","amountOfPages","Math","ceil","currentList","isFirstPage","isLastPage","className","classNames","disabled","href","onClick","map","num","active","App","useState","setCurrentPage","itemsPerPage","setValuesPerPage","firstNum","lastNum","currentItems","slice","id","value","onChange","event","Number","target","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"2MAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCGIG,EAA8B,SAACC,GAC1C,IACEC,EAIED,EAJFC,MACAC,EAGEF,EAHFE,QACAC,EAEEH,EAFFG,YACAC,EACEJ,EADFI,aAGIC,EAAgBC,KAAKC,KAAKN,EAAQC,GAClCM,EAAcf,EAAW,EAAGY,GAC5BI,EAA8B,IAAhBN,EACdO,EAAaP,IAAgBE,EAEnC,OACE,qBAAIM,UAAU,aAAd,UACE,oBAAIA,UAAWC,IACb,YACA,CACEC,SAAUJ,IAHd,SAOE,mBACE,UAAQ,WACRE,UAAU,YACVG,KAAK,QACLC,QAAS,WACFN,GACHL,EAAaD,EAAc,IAG/B,gBAAeM,EATjB,oBAeDD,EAAYQ,KAAI,SAAAC,GAAG,OAClB,oBACEN,UAAWC,IACT,YACA,CACEM,OAAQf,IAAgBc,IAJ9B,SASE,mBACE,UAAQ,WACRN,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMX,EAAaa,IAJ9B,SAMGA,KAREA,MAaT,oBACEN,UAAWC,IACT,YACA,CACEC,SAAUH,IAJhB,SAQE,mBACE,UAAQ,WACRC,UAAU,YACVG,KAAK,QACLC,QAAS,WACFL,GACHN,EAAaD,EAAc,IAG/B,gBAAeO,EATjB,wBCvEKS,EAAgB,WAC3B,MAAsCC,mBAAS,GAA/C,mBAAOjB,EAAP,KAAoBkB,EAApB,KACA,EAAyCD,mBAAS,GAAlD,mBAAOE,EAAP,KAAqBC,EAArB,KAIMC,EAAWF,GAAgBnB,EAAc,GAAK,EAC9CsB,EAAUH,EAAenB,GAHX,GAIhBmB,EAAenB,EAJC,GAQduB,EADQjC,EAAW,EAPL,IAQOkC,MAAMH,EAAW,EAAGC,GAE/C,OACE,sBAAKd,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWR,EADX,mBACiCqB,EADjC,cAC+CC,EAD/C,eAdgB,GAchB,OAIA,sBAAKd,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRiB,GAAG,kBACHjB,UAAU,eACVkB,MAAOP,EACPQ,SAAU,SAAAC,GACRR,EAAiBS,OAAOD,EAAME,OAAOJ,QACrCR,EAAe,IAPnB,UAUE,wBAAQQ,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOK,QAAQ,kBAAkBvB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEV,MA3Cc,GA4CdC,QAASoB,EACTnB,YAAaA,EACbC,aAAciB,IAGhB,6BACGK,EAAaV,KAAI,SAAAC,GAAG,OACnB,oBAAI,UAAQ,OAAZ,wBACWA,IADaA,YCzDlCkB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.5c170cf4.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import classNames from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void,\n};\n\nexport const Pagination: React.FC<Props> = (props) => {\n  const {\n    total,\n    perPage,\n    currentPage,\n    onPageChange,\n  } = props;\n\n  const amountOfPages = Math.ceil(total / perPage);\n  const currentList = getNumbers(1, amountOfPages);\n  const isFirstPage = currentPage === 1;\n  const isLastPage = currentPage === amountOfPages;\n\n  return (\n    <ul className=\"pagination\">\n      <li className={classNames(\n        'page-item',\n        {\n          disabled: isFirstPage,\n        },\n      )}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          onClick={() => {\n            if (!isFirstPage) {\n              onPageChange(currentPage - 1);\n            }\n          }}\n          aria-disabled={isFirstPage}\n        >\n          «\n        </a>\n      </li>\n\n      {currentList.map(num => (\n        <li\n          className={classNames(\n            'page-item',\n            {\n              active: currentPage === num,\n            },\n          )}\n          key={num}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${num}`}\n            onClick={() => onPageChange(num)}\n          >\n            {num}\n          </a>\n        </li>\n      ))}\n\n      <li\n        className={classNames(\n          'page-item',\n          {\n            disabled: isLastPage,\n          },\n        )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          onClick={() => {\n            if (!isLastPage) {\n              onPageChange(currentPage + 1);\n            }\n          }}\n          aria-disabled={isLastPage}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage, setValuesPerPage] = useState(5);\n\n  const totalAmount = 42;\n\n  const firstNum = itemsPerPage * (currentPage - 1) + 1;\n  const lastNum = itemsPerPage * currentPage <= totalAmount\n    ? itemsPerPage * currentPage\n    : totalAmount;\n\n  const items = getNumbers(1, totalAmount);\n  const currentItems = items.slice(firstNum - 1, lastNum);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstNum} - ${lastNum} of ${totalAmount})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsPerPage}\n            onChange={event => {\n              setValuesPerPage(Number(event.target.value));\n              setCurrentPage(1);\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={totalAmount}\n        perPage={itemsPerPage}\n        currentPage={currentPage}\n        onPageChange={setCurrentPage}\n      />\n\n      <ul>\n        {currentItems.map(num => (\n          <li data-cy=\"item\" key={num}>\n            {`Item ${num}`}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}